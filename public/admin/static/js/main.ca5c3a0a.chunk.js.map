{"version":3,"sources":["constants/constants.js","lib/websocket.js","features/goal/goalSlice.js","features/goal/Goal.jsx","features/time/timeSlice.js","lib/utils.js","features/time/Time.jsx","features/penalties/penaltySlice.js","features/penalties/Penalty.jsx","features/penalties/Penalties.jsx","features/emptyGoal/emptyGoalSlice.js","features/emptyGoal/EmptyGoal.jsx","components/numberInput/NumberInput.jsx","features/counter/counterAPI.js","features/counter/counterSlice.js","lib/api/teamInfo.js","config.js","features/teamInfo/teamInfoSlice.js","features/gameEvent/gameEventSlice.js","features/timeout/timeoutSlice.js","features/commandLog/commandLogSlice.js","features/gameSettings/gameSettingsSlice.js","app/store.js","lib/helper/notificationFactory.js","features/teamInfo/Player.jsx","features/teamInfo/Official.jsx","features/teamInfo/PersonList.jsx","features/teamInfo/Team.jsx","features/teamInfo/TeamInfo.jsx","features/timeout/Timeout.jsx","components/sidebar/Sidebar.jsx","components/controlSection/ControlSection.jsx","lib/commandLineHelper.js","lib/commands/abstractCommand.js","lib/commands/goals.js","lib/commands/penalty.js","lib/commands/redCard.js","lib/commands/time.js","lib/commands/warning.js","lib/commandLine.js","features/commandLine/CommandLine.jsx","features/commandLog/CommandLog.jsx","components/gamePanel/GamePanel.jsx","features/gameSettings/GameData.jsx","features/gameSettings/TeamMetaData.jsx","features/gameSettings/PeriodSettings.jsx","features/gameSettings/GameSettings.jsx","App.jsx","serviceWorker.js","lib/heartbeat.js","index.js"],"names":["TEAM_HOME","TEAM_AWAY","ACTIONS","LOG_TYPES","LOG_COLORS","NOTIFICATION_TYPES","PLAYER_PROPERTIES","client","W3CWebSocket","require","w3cwebsocket","onerror","console","log","onopen","onclose","onmessage","e","websocketApi","send","payload","event","JSON","stringify","sendPartialEvent","key","value","this","initialState","goalSlice","createSlice","name","reducers","increase","state","action","decrease","reset","actions","selectGoals","goals","Goal","useSelector","dispatch","useDispatch","className","onClick","STATUS","gameTime","status","timeSlice","setTime","start","stop","selectTime","time","selectStatus","formatSeconds","s","Time","runningState","penaltiesSlice","items","penaltyDuration","addPenalty","team","id","uuidv4","removePenalty","filter","clear","increaseAll","map","penalty","selectPenaltiesByTeam","targetTeam","penalties","Penalty","props","Penalties","penaltiesHome","penaltiesAway","emptyGoalSlice","toggleEmptyGoal","selectEmptyGoalByTeam","emptyGoal","EmptyGoal","emptyGoalHome","emptyGoalAway","buttonHomeClasses","classNames","buttonAwayClasses","style","width","NumberInput","min","max","icon","faSortUp","faSortDown","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","increment","decrement","incrementByAmount","extraReducers","builder","addCase","pending","fulfilled","fetchTeamInfo","mode","game","fetch","fetchResponse","json","shortName","longName","color","players","officials","fetchTeamInformation","config","thunkApi","teamInfotSlice","changeTeamLongName","changeTeamShortName","changeTeamColor","changePlayerProperty","person","isNaN","find","item","number","error","selectTeamInfoByTeam","teams","selectPersonInfoByNumber","player","toString","gameEventSlice","notifications","createNotification","TIMEOUT_TYPES","TIMEOUT_LABELS","isActive","label","timeoutSlice","toggleTimeout","Object","entries","forEach","selectTimeoutStateByType","type","timeout","commandLogSlice","logs","logEvent","push","message","timestamp","selectLogs","gameSettingsSlice","periodDuration","periodCount","currentPeriod","setPeriodDuration","setPeriodCount","setCurrentPeriod","increaseCurrentPeriod","selectPeriodDuration","gameSettings","selectPeriodCount","store","configureStore","reducer","counter","counterReducer","timeReducer","goalReducer","penaltiesReducer","emptyGoalReducer","teamInfoReducer","events","gameEventReducer","timeoutReducer","logReducer","gameSettingsReducer","formatNumber","test","toUpperCase","createGoalNotification","quantity","firstName","lastName","createWarningNotification","createRedCardNotification","createPenaltyNotification","Player","notificationInfo","getState","increaseGoal","decreaseGoal","warning","timePenalty","disqualification","Official","official","PersonList","padding","colSpan","Team","teamData","TeamInfo","TimeOut","timeoutState","halftimeState","gameEndState","display","flexDirection","Sidebar","position","children","classes","classnames","ControlSection","headline","TEAM_MODIFIER_MAP","parseInputByRegex","regex","input","exec","groups","reduce","acc","modifierTestFactory","includes","isIncreaseModifier","isTeamModifier","getTeamByModifier","isNumberValue","isOfficialPrefix","length","AbstractCommand","command","GoalsCommand","parserRegex","fragments","parsedInput","quantifierFunction","modifier","quantifierVerb","handler","PenaltyCommand","RedCardCommand","TimeCommand","isTimeStopModifier","WarningCommand","commandsCollection","instance","commands","register","trim","split","params","commandConfig","process","join","CommandLine","placeholder","onKeyDown","CommandHandler","processCommand","target","CommandLog","GamePanel","GameData","useState","dataMode","setDataMode","gameId","setGameId","onChange","class","TEAM_LABELS","TeamMetaData","PeriodSettings","GameSettings","App","Boolean","window","location","hostname","match","heartbeatFunction","calculateActions","gameState","increaseGlobalTime","increaseAllPenalties","stopTime","setInterval","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca5c3a0a.chunk.js","sourcesContent":["export const TEAM_HOME = 'home';\r\nexport const TEAM_AWAY = 'away';\r\n\r\nexport const ACTIONS = {\r\n    HEARTBEAT: 'heartbeat',\r\n    GAME_EVENT: 'gameEvent',\r\n    PARTIAL_EVENT: 'partial'\r\n};\r\n\r\nexport const LOG_TYPES = {\r\n    ERROR: 'error',\r\n    SUCCESS: 'success',\r\n    INFO: 'info'\r\n};\r\n\r\nexport const LOG_COLORS = {\r\n    [ LOG_TYPES.INFO ]: '#3298dc',\r\n    [ LOG_TYPES.SUCCESS ]: '#2ecc71',\r\n    [ LOG_TYPES.ERROR ]: '#e74c3c'\r\n}\r\n\r\nexport const NOTIFICATION_TYPES = {\r\n    PENALTY: 'penalty',\r\n    GOAL: 'goal',\r\n    YELLOW_CARD: 'yellowcard',\r\n    RED_CARD: 'redcard',\r\n    BLUE_CARD: 'bluecard'\r\n};\r\n\r\nexport const PLAYER_PROPERTIES = {\r\n    GOAL: 'goals',\r\n    WARNING: 'warning',\r\n    PENALTY: 'timePenalty',\r\n    DISQUALIFICATION: 'disqualification'\r\n};","// import { store } from '../app/store';\r\nimport {\r\n    ACTIONS\r\n} from '../constants/constants';\r\nvar W3CWebSocket = require('websocket').w3cwebsocket;\r\n\r\n\r\n\r\nconst UNIQUE_ID = 'admin';\r\n\r\n \r\nvar client = new W3CWebSocket('ws://localhost:8080/', 'echo-protocol');\r\n \r\nclient.onerror = function() {\r\n    console.log('Connection Error');\r\n};\r\n \r\nclient.onopen = function() {\r\n    console.log('WebSocket Client Connected');\r\n \r\n};\r\n \r\nclient.onclose = function() {\r\n    console.log('echo-protocol Client Closed');\r\n};\r\n \r\nclient.onmessage = function(e) {};\r\n\r\nconst websocketApi = {\r\n\r\n    send(payload, event = ACTIONS.HEARTBEAT) {\r\n        client.send(\r\n            JSON.stringify({\r\n                event,\r\n                payload\r\n            })\r\n        );\r\n        console.log(payload);\r\n    },\r\n    sendPartialEvent(key, value) {\r\n        this.send(\r\n            {\r\n                key,\r\n                value\r\n            },\r\n            ACTIONS.PARTIAL_EVENT\r\n        )\r\n    }\r\n};\r\n\r\n\r\nexport default websocketApi;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n    TEAM_HOME,\r\n    TEAM_AWAY,\r\n    ACTIONS\r\n} from '../../constants/constants';\r\n\r\nimport websocketApi from '../../lib/websocket';\r\n\r\nconst initialState = {\r\n    [TEAM_HOME]: 0,\r\n    [TEAM_AWAY]: 0\r\n};\r\n\r\nexport const goalSlice = createSlice({\r\n    name: 'goals',\r\n    initialState,\r\n    reducers: {\r\n        increase: (state, action) => { \r\n            state[action.payload] += 1;\r\n            websocketApi.sendPartialEvent(\r\n                'goals',\r\n                { ...state }\r\n            ); \r\n        },\r\n        decrease: (state, action) => {\r\n            if (state[action.payload] - 1 >= 0) {\r\n                state[action.payload] -= 1;\r\n            }\r\n\r\n            websocketApi.sendPartialEvent(\r\n                'goals',\r\n                { ...state }\r\n            );\r\n        },\r\n        reset: state => { \r\n            state = initialState;\r\n            \r\n            websocketApi.sendPartialEvent(\r\n                'goals',\r\n                { ...state }\r\n            );\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    increase,\r\n    decrease,\r\n    reset\r\n} = goalSlice.actions;\r\n\r\n\r\nexport const selectGoals = state => state.goals;\r\n// export const selectGoalsByTeam = (state, \r\n\r\nexport default goalSlice.reducer;","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './goal.scss';\r\n\r\n\r\nimport {\r\n    TEAM_HOME,\r\n    TEAM_AWAY\r\n} from '../../constants/constants';\r\n\r\nimport {\r\n    increase,\r\n    decrease,\r\n    reset,\r\n    selectGoals,\r\n    selectGoalsByTeam\r\n} from './goalSlice';\r\n\r\nexport function Goal() {\r\n    const goals = useSelector(selectGoals);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"goals\">\r\n            <div className=\"controls home mr-4\">\r\n                <button onClick={() => dispatch(increase(TEAM_HOME))} className=\"button is-success is-outlined mb-1\">+</button>\r\n                <button onClick={() => dispatch(decrease(TEAM_HOME))} className=\"button is-danger is-outlined\">-</button>\r\n            </div>\r\n            <div className=\"display\">\r\n                <span>{goals[TEAM_HOME]}:{goals[TEAM_AWAY]}</span>\r\n            </div>\r\n            <div className=\"controls away ml-4\">\r\n                <button onClick={() => dispatch(increase(TEAM_AWAY))} className=\"button is-success is-outlined mb-1\">+</button>\r\n                <button onClick={() => dispatch(decrease(TEAM_AWAY))} className=\"button is-danger is-outlined\">-</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const STATUS = {\r\n    RUNNING: 'running',\r\n    STOPPED: 'stopped'\r\n};\r\n\r\nconst initialState = {\r\n    gameTime: 0,\r\n    status: STATUS.STOPPED,\r\n};\r\n\r\nexport const timeSlice = createSlice({\r\n    name: 'time',\r\n    initialState,\r\n    reducers: {\r\n        increase: state => { state.gameTime += 1; },\r\n        decrease: state => { state.gameTime -= 1; },\r\n        setTime: (state, action) => state.gameTime = action.payload,\r\n        reset: state => state = initialState,\r\n        start: state => { state.status = STATUS.RUNNING;  },\r\n        stop: state => { state.status = STATUS.STOPPED; },\r\n    }\r\n});\r\n\r\nexport const {\r\n    increase,\r\n    decrease,\r\n    setTime,\r\n    reset,\r\n    start,\r\n    stop\r\n} = timeSlice.actions;\r\n\r\n\r\nexport const selectTime = state => state.time.gameTime;\r\nexport const selectStatus = state => state.time.status;\r\nexport const selectPenaltyByTeam = (state, team) => state.penalties.filter(penalty => penalty.team === team);\r\n\r\nexport default timeSlice.reducer;","export const formatSeconds = (s) => (s-(s%=60))/60+(9<s?':':':0')+s;\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './time.scss';\r\n\r\nimport {\r\n    start,\r\n    stop,\r\n    selectTime,\r\n    selectStatus\r\n} from './timeSlice';\r\n\r\nimport {\r\n    formatSeconds\r\n} from '../../lib/utils';\r\n\r\nexport function Time() {\r\n\r\n    const dispatch = useDispatch();\r\n    const time = useSelector(selectTime);\r\n    const runningState = useSelector(selectStatus);\r\n\r\n    return (\r\n        <div className=\"time mt-4 mb-4\">\r\n            <span className=\"display\">\r\n                {formatSeconds(time)}\r\n            </span>\r\n            <span className=\"state is-size-7 mb-2\">\r\n                {runningState}\r\n            </span>\r\n            <div className=\"controls\">\r\n                <button className=\"button is-success is-outlined mr-1\" onClick={() => dispatch(start())}>Start</button>\r\n                <button className=\"button is-danger is-outlined\" onClick={() => dispatch(stop())}>Stop</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport {\r\n    TEAM_HOME,\r\n    TEAM_AWAY\r\n} from '../../constants/constants';\r\nimport websocketApi from '../../lib/websocket';\r\n\r\nconst initialState = {\r\n    items: [],\r\n    penaltyDuration: 120\r\n};\r\n\r\nconst penaltyFactory = ({ team }) => ({\r\n    team,\r\n    time: 120,\r\n    id: uuidv4()\r\n});\r\n\r\nexport const penaltiesSlice = createSlice({\r\n    name: 'penalties',\r\n    initialState,\r\n    reducers: {\r\n        addPenalty: (state, action) => { \r\n            state.items = [...state.items, penaltyFactory({ team: action.payload })];\r\n\r\n            websocketApi.sendPartialEvent(\r\n                'penalties',\r\n                { ...state }\r\n            );\r\n        },\r\n        removePenalty: (state, action) => {\r\n            state.items = state.items.filter(({ id }) => id !== action.payload );\r\n\r\n            websocketApi.sendPartialEvent(\r\n                'penalties',\r\n                { ...state }\r\n            );\r\n        },\r\n        clear: state => { \r\n            state.items = [];\r\n\r\n            websocketApi.sendPartialEvent(\r\n                'penalties',\r\n                { ...state }\r\n            );\r\n        },\r\n        increaseAll: state => {\r\n            state.items = state.items\r\n                // decrease time by 1\r\n                .map(penalty => ({ ...penalty, time: penalty.time - 1 }))\r\n                // remove all outdated penalties\r\n                .filter(({ time }) => time > 0)\r\n            ;\r\n\r\n            websocketApi.sendPartialEvent(\r\n                'penalties',\r\n                { ...state }\r\n            );\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    addPenalty,\r\n    removePenalty,\r\n    clear,\r\n    increaseAll\r\n} = penaltiesSlice.actions;\r\n\r\nexport const selectPenaltiesByTeam = targetTeam => state => state.penalties.items.filter(({ team }) => team === targetTeam);\r\n\r\nexport default penaltiesSlice.reducer;\r\n\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    removePenalty\r\n} from './penaltySlice';\r\n\r\nimport {\r\n    formatSeconds\r\n} from '../../lib/utils';\r\n\r\nimport './penalty.scss';\r\n\r\nexport function Penalty(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        penalty\r\n    } = props;\r\n\r\n    return (\r\n        <div className=\"penalty tag is-danger is-large mb-2\">\r\n            <span>{formatSeconds(penalty.time)}</span>\r\n            <button className=\"delete is-medium ml-3\" onClick={() => dispatch(removePenalty(penalty.id))}>Remove</button>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    TEAM_HOME,\r\n    TEAM_AWAY\r\n} from '../../constants/constants';\r\n\r\nimport { Penalty } from './Penalty';\r\n\r\nimport {\r\n    addPenalty,\r\n    removePenalty,\r\n    clear,\r\n    increaseAll,\r\n    selectPenaltiesByTeam\r\n} from './penaltySlice';\r\n\r\nimport './penalties.scss';\r\n\r\nexport function Penalties() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const penaltiesHome = useSelector(selectPenaltiesByTeam(TEAM_HOME));\r\n    const penaltiesAway = useSelector(selectPenaltiesByTeam(TEAM_AWAY));\r\n\r\n    return (\r\n        <div className=\"penalties columns\">\r\n            <div className=\"column home\">\r\n                <button className=\"button is-outlined mb-2 is-success\" onClick={() => dispatch(addPenalty(TEAM_HOME))}>Add Home</button>\r\n                <div className=\"penalty-list\">\r\n                {\r\n                    penaltiesHome.map(penalty => (<Penalty penalty={penalty} key={penalty.id} />))\r\n                }\r\n                </div>\r\n            </div>\r\n            <div className=\"column guest\">\r\n                <button className=\"button is-outlined mb-2 is-success\" onClick={() => dispatch(addPenalty(TEAM_AWAY))}>Add Away</button>\r\n                <div className=\"penalty-list\">\r\n                {\r\n                    penaltiesAway.map(penalty => (<Penalty penalty={penalty} key={penalty.id} />))\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n    TEAM_HOME,\r\n    TEAM_AWAY\r\n} from '../../constants/constants';\r\nimport websocketApi from '../../lib/websocket';\r\n\r\nconst initialState = {\r\n    [ TEAM_HOME ]: false,\r\n    [ TEAM_AWAY ]: false\r\n};\r\n\r\nexport const emptyGoalSlice = createSlice({\r\n    name: 'emptyGoal',\r\n    initialState,\r\n    reducers: {\r\n        toggleEmptyGoal: (state, action) => {\r\n            state[ action.payload ] = !state[ action.payload ];\r\n\r\n            websocketApi.sendPartialEvent(\r\n                'emptyGoal',\r\n                { ...state }\r\n            );\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    toggleEmptyGoal,\r\n} = emptyGoalSlice.actions;\r\n\r\nexport const selectEmptyGoalByTeam = team => state => state.emptyGoal[ team ];\r\n\r\nexport default emptyGoalSlice.reducer;\r\n\r\n","import classNames from 'classnames';\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    TEAM_HOME,\r\n    TEAM_AWAY\r\n} from '../../constants/constants';\r\n\r\nimport {\r\n    toggleEmptyGoal,\r\n    selectEmptyGoalByTeam,\r\n} from './emptyGoalSlice';\r\n\r\nexport function EmptyGoal() {\r\n    const dispatch = useDispatch();\r\n    const emptyGoalHome = useSelector(selectEmptyGoalByTeam(TEAM_HOME));\r\n    const emptyGoalAway = useSelector(selectEmptyGoalByTeam(TEAM_AWAY));\r\n\r\n    const buttonHomeClasses = classNames({\r\n        'button mb-1': true,\r\n        'is-outlined': !emptyGoalHome,\r\n        'is-success': emptyGoalHome\r\n    });\r\n\r\n    const buttonAwayClasses = classNames({\r\n        'button mb-1': true,\r\n        'is-outlined': !emptyGoalAway,\r\n        'is-success': emptyGoalAway\r\n    });\r\n\r\n    return (\r\n        <div className=\"empty-goal\">\r\n            <div className=\"home\">\r\n                <button className={buttonHomeClasses} onClick={() => dispatch(toggleEmptyGoal(TEAM_HOME))} style={{ width: '100%' }}>\r\n                    Home\r\n                </button>\r\n            </div>\r\n            <div className=\"away\">\r\n                <button className={buttonAwayClasses} onClick={() => dispatch(toggleEmptyGoal(TEAM_AWAY))} style={{ width: '100%' }}>\r\n                    Away\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import './numberInput.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSortUp, faSortDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport function NumberInput({ value, increase, decrease, min, max  }) {\r\n    return (\r\n        <div className=\"number-input\">\r\n            <span>{value}</span>\r\n            <div className=\"controls ml-2\">\r\n                {/* <i class=\"fa fa-sort-up\"></i></span> */}\r\n                <span className=\"icon is-small\" onClick={() => (value + 1 > max) ? void(0) : increase() }>\r\n                    <FontAwesomeIcon icon={faSortUp} />\r\n                </span>\r\n                <span className=\"icon is-small\" onClick={() => (value - 1 < min) ? void(0) : decrease() }>\r\n                    <FontAwesomeIcon icon={faSortDown} />\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { SERVER_HOST } from '../../config';\r\n\r\nexport const fetchTeamInfo = async ({ mode, game }) => {\r\n    const fetchResponse = await fetch(`${SERVER_HOST}/game/${mode}/${game}`)\r\n    return await fetchResponse.json();\r\n}","export const SERVER_HOST = 'http://localhost:8000';","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport {\r\n    TEAM_HOME,\r\n    TEAM_AWAY\r\n} from '../../constants/constants';\r\n\r\nimport { fetchTeamInfo } from '../../lib/api/teamInfo';\r\n\r\nimport websocketApi from '../../lib/websocket';\r\n\r\nconst initialState = {\r\n    [ TEAM_HOME ]: {\r\n        shortName: 'Home',\r\n        longName: 'Home Team',\r\n        color: '#92f50a',\r\n        players: [],\r\n        officials: []\r\n    },\r\n    [ TEAM_AWAY ]: {\r\n        shortName: 'Guest',\r\n        longName: 'Guest Team',\r\n        color: '#004080',\r\n        players: [],\r\n        officials: []\r\n    },\r\n};\r\n\r\nconst fetchTeamInformation = createAsyncThunk(\r\n    'team/fetchTeamInformation',\r\n    async (config, thunkApi) => {\r\n        const response = await fetchTeamInfo(config);\r\n        return response;\r\n    }\r\n)\r\n\r\nexport const teamInfotSlice = createSlice({\r\n    name: 'teams',\r\n    initialState,\r\n    reducers: {\r\n        changeTeamLongName: (state, action) => {\r\n            const {\r\n                team,\r\n                value\r\n            } = action.payload;\r\n\r\n            state[ team ].longName = value;\r\n\r\n            websocketApi.sendPartialEvent(\r\n                'teams',\r\n                { ...state }\r\n            );\r\n        },\r\n        changeTeamShortName: (state, action) => {\r\n            const {\r\n                team,\r\n                value\r\n            } = action.payload;\r\n\r\n            state[ team ].shortName = value;\r\n\r\n            websocketApi.sendPartialEvent(\r\n                'teams',\r\n                { ...state }\r\n            );\r\n        },\r\n        changeTeamColor: (state, action) => {\r\n            const {\r\n                team,\r\n                value\r\n            } = action.payload;\r\n\r\n            state[ team ].color = value;\r\n\r\n            websocketApi.sendPartialEvent(\r\n                'teams',\r\n                { ...state }\r\n            );\r\n        },\r\n        changePlayerProperty: (state, action) => {\r\n            const {\r\n                team,\r\n                person,\r\n                key,\r\n                value\r\n            } = action.payload;\r\n\r\n            try {\r\n                const personData = state[ team ][ !isNaN(person) ? 'players' : 'officials' ].find(item => item.number == person);\r\n                personData[ key ] = value;\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n                console.log(`Property ${key} or person ${person} not found!`);\r\n            }\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [fetchTeamInformation.fulfilled]: (state, { payload }) => {\r\n            state[ TEAM_HOME ] = {\r\n                ...state[ TEAM_HOME ],\r\n                ...payload.data[ TEAM_HOME ]\r\n            };\r\n\r\n            state[ TEAM_AWAY ] = {\r\n                ...state[ TEAM_AWAY ],\r\n                ...payload.data[ TEAM_AWAY ]\r\n            };\r\n\r\n            websocketApi.sendPartialEvent(\r\n                'teams',\r\n                { ...state }\r\n            );\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    changeTeamLongName,\r\n    changeTeamShortName,\r\n    changeTeamColor,\r\n    changePlayerProperty\r\n} = teamInfotSlice.actions;\r\n\r\nexport {\r\n    fetchTeamInformation\r\n};\r\n\r\nexport const selectTeamInfoByTeam = team => state => state.teams[ team ];\r\nexport const selectPlayersByTeam = team => state => state.teams[ team ].players;\r\nexport const selectPersonInfoByNumber = (team, number) => state => ({\r\n    team: state.teams[ team ],\r\n    player: ([ ...state.teams[ team ].players, ...state.teams[ team ].officials ]).find(person => person.number.toString() === number)\r\n});\r\n\r\nexport default teamInfotSlice.reducer;\r\n\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport websocketApi from '../../lib/websocket';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport {\r\n    TEAM_HOME,\r\n    TEAM_AWAY\r\n} from '../../constants/constants';\r\n\r\nconst notificationFactory = ({ team, type, quantifier = 0 }) => ({\r\n    id: uuidv4(),\r\n    team,\r\n    type,\r\n    quantifier\r\n})\r\n\r\nconst initialState = {\r\n    notifications: []\r\n};\r\n\r\nexport const gameEventSlice = createSlice({\r\n    name: 'gameEvent',\r\n    initialState,\r\n    reducers: {\r\n        createNotification: (state, action) => {\r\n            websocketApi.send({\r\n                ...action.payload\r\n            }, 'gameEvent');\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    createNotification,\r\n} = gameEventSlice.actions;\r\n\r\nexport default gameEventSlice.reducer;\r\n\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n    TEAM_HOME,\r\n    TEAM_AWAY\r\n} from '../../constants/constants';\r\nimport websocketApi from '../../lib/websocket';\r\n\r\nexport const TIMEOUT_TYPES = {\r\n    TIMEOUT: 'timeout',\r\n    HALFTIME: 'halftime',\r\n    GAMEEND: 'gameend'\r\n}\r\n\r\nconst TIMEOUT_LABELS = {\r\n    [TIMEOUT_TYPES.TIMEOUT]: 'Auszeit',\r\n    [TIMEOUT_TYPES.HALFTIME]: 'Halbzeit',\r\n    [TIMEOUT_TYPES.GAMEEND]: 'Spielende',\r\n};\r\n\r\nconst initialState = {\r\n    [ TIMEOUT_TYPES.TIMEOUT ]: {\r\n        isActive: false,\r\n        label: TIMEOUT_LABELS[ TIMEOUT_TYPES.TIMEOUT]\r\n    },\r\n    [ TIMEOUT_TYPES.HALFTIME ]: {\r\n        isActive: false,\r\n        label: TIMEOUT_LABELS[ TIMEOUT_TYPES.HALFTIME]\r\n    },\r\n    [ TIMEOUT_TYPES.GAMEEND ]: {\r\n        isActive: false,\r\n        label: TIMEOUT_LABELS[ TIMEOUT_TYPES.GAMEEND]\r\n    }\r\n};\r\n\r\nexport const timeoutSlice = createSlice({\r\n    name: 'timeout',\r\n    initialState,\r\n    reducers: {\r\n        toggleTimeout: (state, action) => {\r\n\r\n            Object.entries(state).forEach(([ key, value ]) => key === action.payload ? (value.isActive = !value.isActive) : ( value.isActive = false ));\r\n\r\n            // state[action.payload].isActive = !state[action.payload].isActive;\r\n\r\n            websocketApi.sendPartialEvent(\r\n                'timeout',\r\n                { ...state }\r\n            );\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    toggleTimeout\r\n} = timeoutSlice.actions;\r\n\r\n\r\nexport const selectTimeoutStateByType = type => state => state.timeout[type];\r\n\r\nexport default timeoutSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\r\nimport { v1 as timestamp } from 'uuid';\r\n\r\nimport websocketApi from '../../lib/websocket';\r\n\r\nconst initialState = {\r\n    logs: []\r\n};\r\n\r\nexport const commandLogSlice = createSlice({\r\n    name: 'logs',\r\n    initialState,\r\n    reducers: {\r\n        logEvent: (state, action) => {\r\n            state.logs.push({\r\n                message: action.payload.message,\r\n                type: action.payload.type,\r\n                id: timestamp()\r\n            });\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    logEvent,\r\n} = commandLogSlice.actions;\r\n\r\nexport const selectLogs = state => state.logs || [];\r\n\r\nexport default commandLogSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    periodDuration: 1500,\r\n    periodCount: 2,\r\n    currentPeriod: 1\r\n};\r\n\r\nexport const gameSettingsSlice = createSlice({\r\n    name: 'gameSettings',\r\n    initialState,\r\n    reducers: {\r\n        setPeriodDuration: (state, action) => {\r\n            state.periodDuration = action.payload;\r\n        },\r\n        setPeriodCount: (state, action) => {\r\n            state.periodCount = action.payload;\r\n        },\r\n        setCurrentPeriod: (state, action) => {\r\n            state.currentPeriod = action.payload;\r\n        },\r\n        increaseCurrentPeriod: (state, action) => {\r\n            if (state.currentPeriod + 1 <= state.periodCount) {\r\n                state.currentPeriod++;\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    setPeriodDuration,\r\n    setPeriodCount,\r\n    setCurrentPeriod,\r\n    increaseCurrentPeriod\r\n} = gameSettingsSlice.actions;\r\n\r\nexport const selectPeriodDuration = state => state.gameSettings.periodDuration;\r\nexport const selectPeriodCount = state => state.gameSettings.periodCount;\r\nexport const selectCurrentPeriod = state => state.gameSettings.currentPeriod;\r\n\r\nexport default gameSettingsSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\nimport timeReducer from '../features/time/timeSlice';\nimport goalReducer from '../features/goal/goalSlice';\nimport penaltiesReducer from '../features/penalties/penaltySlice';\nimport emptyGoalReducer from '../features/emptyGoal/emptyGoalSlice';\nimport teamInfoReducer from '../features/teamInfo/teamInfoSlice';\nimport gameEventReducer from '../features/gameEvent/gameEventSlice';\nimport timeoutReducer from '../features/timeout/timeoutSlice';\nimport logReducer from '../features/commandLog/commandLogSlice';\nimport gameSettingsReducer from '../features/gameSettings/gameSettingsSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    time: timeReducer,\n    goals: goalReducer,\n    penalties: penaltiesReducer,\n    emptyGoal: emptyGoalReducer,\n    teams: teamInfoReducer,\n    events: gameEventReducer,\n    timeout: timeoutReducer,\n    logs: logReducer,\n    gameSettings: gameSettingsReducer\n  },\n});\n","import {\r\n    NOTIFICATION_TYPES\r\n} from '../../constants/constants';\r\n\r\nconst formatNumber = number => (\r\n    /^[a-d]$/.test(number) ? `O${number.toString().toUpperCase()}` : number\r\n);\r\n\r\nexport const createGoalNotification = ({ team, player, quantity }) => ({\r\n    type: NOTIFICATION_TYPES.GOAL,\r\n    team: team.longName,\r\n    player: {\r\n        name: `${player.firstName} ${player.lastName}`,\r\n        number: formatNumber(player.number)\r\n    },\r\n    quantity\r\n});\r\n\r\nexport const createWarningNotification = ({ team, player }) => ({\r\n    type: NOTIFICATION_TYPES.YELLOW_CARD,\r\n    team: team.longName,\r\n    player: {\r\n        name: `${player.firstName} ${player.lastName}`,\r\n        number: formatNumber(player.number)\r\n    },\r\n    quantity: 1\r\n});\r\n\r\nexport const createRedCardNotification = ({ team, player }) => ({\r\n    type: NOTIFICATION_TYPES.RED_CARD,\r\n    team: team.longName,\r\n    player: {\r\n        name: `${player.firstName} ${player.lastName}`,\r\n        number: formatNumber(player.number)\r\n    },\r\n    quantity: 1\r\n});\r\n\r\nexport const createPenaltyNotification = ({ team, player, quantity }) => ({\r\n    type: NOTIFICATION_TYPES.PENALTY,\r\n    team: team.longName,\r\n    player: {\r\n        name: `${player.firstName} ${player.lastName}`,\r\n        number: formatNumber(player.number)\r\n    },\r\n    quantity\r\n});","import { NumberInput } from '../../components/numberInput/NumberInput';\r\nimport './player.scss';\r\n\r\nimport { store } from '../../app/store';\r\n\r\nimport {\r\n    increase as increaseGoal,\r\n    decrease as decreaseGoal,\r\n} from '../../features/goal/goalSlice';\r\n\r\nimport {\r\n    changePlayerProperty,\r\n    selectPersonInfoByNumber\r\n} from '../../features/teamInfo/teamInfoSlice';\r\n\r\nimport {\r\n    createNotification\r\n} from '../../features/gameEvent/gameEventSlice';\r\n\r\nimport {\r\n    createGoalNotification,\r\n    createWarningNotification,\r\n    createRedCardNotification,\r\n    createPenaltyNotification\r\n} from '../../lib/helper/notificationFactory';\r\n\r\nimport {\r\n    addPenalty,\r\n} from '../../features/penalties/penaltySlice';\r\n\r\nimport { LOG_TYPES, PLAYER_PROPERTIES } from '../../constants/constants';\r\n\r\nexport function Player({ player, team }) {\r\n\r\n    return (\r\n        <tr className=\"player\">\r\n            <td>{player.number}</td>\r\n            <td>{player.firstName} {player.lastName}</td>\r\n            <td>\r\n                <NumberInput\r\n                    max={100}\r\n                    min={0}\r\n                    value={player.goals}\r\n                    increase={() => {\r\n\r\n                        const notificationInfo = selectPersonInfoByNumber(team, player.number)(store.getState());\r\n\r\n                        store.dispatch(increaseGoal(team));\r\n\r\n                        store.dispatch(\r\n                            createNotification(\r\n                                createGoalNotification({\r\n                                    team: notificationInfo.team,\r\n                                    player: player,\r\n                                    quantity: player.goals + 1\r\n                                })\r\n                            )\r\n                        );\r\n            \r\n                        store.dispatch(\r\n                            changePlayerProperty({\r\n                                team,\r\n                                person: player.number,\r\n                                key: PLAYER_PROPERTIES.GOAL,\r\n                                value: player.goals + 1\r\n                            })\r\n                        );\r\n                    }}\r\n                    decrease={() => {\r\n                        store.dispatch(decreaseGoal(team));\r\n\r\n                        store.dispatch(\r\n                            changePlayerProperty({\r\n                                team,\r\n                                person: player.number,\r\n                                key: PLAYER_PROPERTIES.GOAL,\r\n                                value: player.goals - 1\r\n                            })\r\n                        );\r\n                    }}\r\n                />\r\n            </td>\r\n            <td>\r\n                <NumberInput\r\n                    max={1}\r\n                    min={0}\r\n                    value={player.warning}\r\n                    increase={() => {\r\n                        const notificationInfo = selectPersonInfoByNumber(team, player.number)(store.getState());\r\n\r\n                        store.dispatch(\r\n                            changePlayerProperty({\r\n                                team,\r\n                                person: player.number,\r\n                                key: PLAYER_PROPERTIES.WARNING,\r\n                                value: 1\r\n                            })\r\n                        );\r\n\r\n                        store.dispatch(\r\n                            createNotification(\r\n                                createWarningNotification({\r\n                                    team: notificationInfo.team,\r\n                                    player: player\r\n                                })\r\n                            )\r\n                        );\r\n                        \r\n                    }}\r\n                    decrease={() => {\r\n                        store.dispatch(\r\n                            changePlayerProperty({\r\n                                team,\r\n                                person: player.number,\r\n                                key: PLAYER_PROPERTIES.WARNING,\r\n                                value: 0\r\n                            })\r\n                        );\r\n                    }}\r\n                />\r\n            </td>\r\n            <td>\r\n                <NumberInput\r\n                    max={3}\r\n                    min={0}\r\n                    value={player.timePenalty}\r\n                    increase={() => {\r\n\r\n                        const notificationInfo = selectPersonInfoByNumber(team, player.number)(store.getState());\r\n\r\n                        store.dispatch(\r\n                            changePlayerProperty({\r\n                                team,\r\n                                person: player.number,\r\n                                key: PLAYER_PROPERTIES.PENALTY,\r\n                                value: player.timePenalty + 1\r\n                            })\r\n                        );\r\n\r\n                        store.dispatch(\r\n                            addPenalty(team)\r\n                        );\r\n\r\n                        store.dispatch(\r\n                            createNotification(\r\n                                createPenaltyNotification({\r\n                                    team: notificationInfo.team,\r\n                                    player: player,\r\n                                    quantity: player.timePenalty + 1\r\n                                })\r\n                            )\r\n                        );\r\n\r\n\r\n                    }}\r\n                    decrease={() => {\r\n                        store.dispatch(\r\n                            changePlayerProperty({\r\n                                team,\r\n                                person: player.number,\r\n                                key: PLAYER_PROPERTIES.PENALTY,\r\n                                value: player.timePenalty - 1\r\n                            })\r\n                        );\r\n                    }}\r\n                />\r\n            </td>\r\n            <td>\r\n                <NumberInput\r\n                    max={1}\r\n                    min={0}\r\n                    value={player.disqualification}\r\n                    increase={() => {\r\n                        const notificationInfo = selectPersonInfoByNumber(team, player.number)(store.getState());\r\n\r\n                        store.dispatch(\r\n                            changePlayerProperty({\r\n                                team,\r\n                                person: player.number,\r\n                                key: PLAYER_PROPERTIES.DISQUALIFICATION,\r\n                                value: 1\r\n                            })\r\n                        );\r\n\r\n                        store.dispatch(\r\n                            createNotification(\r\n                                createRedCardNotification({\r\n                                    team: notificationInfo.team,\r\n                                    player: player\r\n                                })\r\n                            )\r\n                        );\r\n                        \r\n                    }}\r\n                    decrease={() => {\r\n                        store.dispatch(\r\n                            changePlayerProperty({\r\n                                team,\r\n                                person: player.number,\r\n                                key: PLAYER_PROPERTIES.DISQUALIFICATION,\r\n                                value: 0\r\n                            })\r\n                        );\r\n                    }}\r\n                />\r\n            </td>\r\n        </tr>\r\n    )\r\n}","import { NumberInput } from '../../components/numberInput/NumberInput';\r\n\r\nimport './official.scss';\r\n\r\nimport { store } from '../../app/store';\r\n\r\nimport {\r\n    increase as increaseGoal,\r\n    decrease as decreaseGoal,\r\n} from '../../features/goal/goalSlice';\r\n\r\nimport {\r\n    changePlayerProperty,\r\n    selectPersonInfoByNumber\r\n} from '../../features/teamInfo/teamInfoSlice';\r\n\r\nimport {\r\n    createNotification\r\n} from '../../features/gameEvent/gameEventSlice';\r\n\r\nimport {\r\n    createGoalNotification,\r\n    createWarningNotification,\r\n    createRedCardNotification,\r\n    createPenaltyNotification\r\n} from '../../lib/helper/notificationFactory';\r\n\r\nimport {\r\n    addPenalty,\r\n} from '../../features/penalties/penaltySlice';\r\n\r\nimport { LOG_TYPES, PLAYER_PROPERTIES } from '../../constants/constants';\r\n\r\nexport function Official({ official, team }) {\r\n\r\n    return (\r\n        <tr className=\"official\">\r\n            <td>{official.number}</td>\r\n            <td>{official.firstName} {official.lastName}</td>\r\n            <td>\r\n                {'-'}\r\n            </td>\r\n            <td>\r\n                <NumberInput\r\n                    max={1}\r\n                    min={0}\r\n                    value={official.warning}\r\n                    increase={() => {\r\n                        const notificationInfo = selectPersonInfoByNumber(team, official.number)(store.getState());\r\n\r\n                        store.dispatch(\r\n                            changePlayerProperty({\r\n                                team,\r\n                                person: official.number,\r\n                                key: PLAYER_PROPERTIES.WARNING,\r\n                                value: 1\r\n                            })\r\n                        );\r\n\r\n                        store.dispatch(\r\n                            createNotification(\r\n                                createWarningNotification({\r\n                                    team: notificationInfo.team,\r\n                                    player: official\r\n                                })\r\n                            )\r\n                        );\r\n                        \r\n                    }}\r\n                    decrease={() => {\r\n                        store.dispatch(\r\n                            changePlayerProperty({\r\n                                team,\r\n                                person: official.number,\r\n                                key: PLAYER_PROPERTIES.WARNING,\r\n                                value: 0\r\n                            })\r\n                        );\r\n                    }}\r\n                />\r\n            </td>\r\n            <td>\r\n                <NumberInput\r\n                    max={2}\r\n                    min={0}\r\n                    value={official.timePenalty}\r\n                    increase={() => {\r\n\r\n                        const notificationInfo = selectPersonInfoByNumber(team, official.number)(store.getState());\r\n\r\n                        store.dispatch(\r\n                            changePlayerProperty({\r\n                                team,\r\n                                person: official.number,\r\n                                key: PLAYER_PROPERTIES.PENALTY,\r\n                                value: official.timePenalty + 1\r\n                            })\r\n                        );\r\n\r\n                        store.dispatch(\r\n                            addPenalty(team)\r\n                        );\r\n\r\n                        store.dispatch(\r\n                            createNotification(\r\n                                createPenaltyNotification({\r\n                                    team: notificationInfo.team,\r\n                                    player: official,\r\n                                    quantity: official.timePenalty + 1\r\n                                })\r\n                            )\r\n                        );\r\n\r\n\r\n                    }}\r\n                    decrease={() => {\r\n                        store.dispatch(\r\n                            changePlayerProperty({\r\n                                team,\r\n                                person: official.number,\r\n                                key: PLAYER_PROPERTIES.PENALTY,\r\n                                value: official.timePenalty - 1\r\n                            })\r\n                        );\r\n                    }}\r\n                />\r\n            </td>\r\n            <td>\r\n                <NumberInput\r\n                    max={1}\r\n                    min={0}\r\n                    value={official.disqualification}\r\n                    increase={() => {\r\n                        const notificationInfo = selectPersonInfoByNumber(team, official.number)(store.getState());\r\n\r\n                        store.dispatch(\r\n                            changePlayerProperty({\r\n                                team,\r\n                                person: official.number,\r\n                                key: PLAYER_PROPERTIES.DISQUALIFICATION,\r\n                                value: 1\r\n                            })\r\n                        );\r\n\r\n                        store.dispatch(\r\n                            createNotification(\r\n                                createRedCardNotification({\r\n                                    team: notificationInfo.team,\r\n                                    player: official\r\n                                })\r\n                            )\r\n                        );\r\n                        \r\n                    }}\r\n                    decrease={() => {\r\n                        store.dispatch(\r\n                            changePlayerProperty({\r\n                                team,\r\n                                person: official.number,\r\n                                key: PLAYER_PROPERTIES.DISQUALIFICATION,\r\n                                value: 0\r\n                            })\r\n                        );\r\n                    }}\r\n                />\r\n            </td>\r\n        </tr>\r\n    )\r\n}","import { Player } from \"./Player\";\r\nimport { Official } from \"./Official\";\r\n\r\nexport function PersonList({ players, officials, team }) {\r\n    return (\r\n        <div className=\"card player-list\">\r\n            <div className=\"card-header\">\r\n                <p className=\"card-header-title\">Players</p>\r\n            </div>\r\n            <div className=\"card-content\" style={{ padding: '0' }}>\r\n                <table className=\"table\" style={{ width: '100%' }}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nr.</th>\r\n                            <th>Name</th>\r\n                            <th>\r\n                                <span>🥅</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>🟨</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>✌</span>\r\n                            </th>\r\n                            <th>\r\n                                <span>🟥</span>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            players.map(player => (<Player player={player} team={team} key={player.key} /> ))\r\n                        }\r\n                        <tr><td colSpan=\"6\"></td></tr>\r\n                        {\r\n                            officials.map(official => (<Official official={official} team={team} key={official.key} /> ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { TEAM_AWAY, TEAM_HOME } from '../../constants/constants';\r\nimport { PersonList } from './PersonList';\r\n\r\nimport {\r\n    changeTeamLongName,\r\n    changeTeamShortName,\r\n    changeTeamColor,\r\n    selectTeamInfoByTeam\r\n} from './teamInfoSlice';\r\n\r\nconst TEAM_LABELS = {\r\n    [TEAM_HOME]: 'Home',\r\n    [TEAM_AWAY]: 'Guest'\r\n}\r\n\r\nexport function Team({ team }) {\r\n\r\n    const teamData = useSelector(selectTeamInfoByTeam(team));\r\n\r\n    return (\r\n        <div className=\"team\">\r\n            <PersonList players={teamData.players} officials={teamData.officials} team={team} />\r\n        </div>\r\n    )\r\n\r\n}","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    TEAM_HOME,\r\n    TEAM_AWAY\r\n} from '../../constants/constants';\r\nimport { Team } from './Team';\r\n\r\nimport {\r\n    changeTeamLongName,\r\n    changeTeamShortName,\r\n\r\n    selectTeamInfoByTeam\r\n} from './teamInfoSlice';\r\n\r\nexport function TeamInfo({ team }) {\r\n    return (\r\n        <div className=\"team-info\">\r\n            <Team team={team} />\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    toggleTimeout,\r\n    selectTimeoutStateByType,\r\n    TIMEOUT_TYPES\r\n} from './timeoutSlice';\r\n\r\nexport function TimeOut() {\r\n\r\n    const dispatch = useDispatch();\r\n    const timeoutState = useSelector(selectTimeoutStateByType(TIMEOUT_TYPES.TIMEOUT));\r\n    const halftimeState = useSelector(selectTimeoutStateByType(TIMEOUT_TYPES.HALFTIME));\r\n    const gameEndState = useSelector(selectTimeoutStateByType(TIMEOUT_TYPES.GAMEEND));\r\n\r\n    console.log({ timeoutState, halftimeState, gameEndState });\r\n\r\n    // const timeoutButtonClasses = class\r\n\r\n    return (\r\n        <div className=\"timeout\" style={{display: 'flex', flexDirection: 'column'}}>\r\n            <button className=\"button is-outlined is-success mb-1\" onClick={() => dispatch(toggleTimeout(TIMEOUT_TYPES.TIMEOUT))}>Timeout</button>\r\n            <button className=\"button is-outlined is-primary mb-1\" onClick={() => dispatch(toggleTimeout(TIMEOUT_TYPES.HALFTIME))}>Halftime</button>\r\n            <button className=\"button is-outlined is-info\" onClick={() => dispatch(toggleTimeout(TIMEOUT_TYPES.GAMEEND))}>Gameend</button>\r\n        </div>\r\n    )\r\n\r\n\r\n}","import './sidebar.scss';\r\nimport classnames from 'classnames';\r\n\r\nexport function Sidebar({ position, children }) {\r\n\r\n    const classes = classnames({\r\n        'sidebar': true,\r\n        'p-2': true,\r\n        [position]: true\r\n    })\r\n\r\n    return (\r\n        <div className={classes}>\r\n            {children}\r\n        </div>\r\n    )\r\n}","import './controlSection.scss';\r\n\r\nexport function ControlSection({ headline, children }) {\r\n    return (\r\n        <div className=\"control-section column\">\r\n            <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                <p className=\"card-header-title is-size-6 has-text-centered\">{headline}</p>\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { TEAM_AWAY, TEAM_HOME } from \"../constants/constants\";\r\n\r\nconst QUANTITY_MODIFIER_DECREASE = '-';\r\nconst QUANTITY_MODIFIER_INCREASE = '+';\r\nconst TEAM_MODIFIER_HOME = 'h';\r\nconst TEAM_MODIFIER_AWAY = 'g';\r\nconst TIME_START_MODIFIER = 's';\r\nconst TIME_STOP_MODIFIER = 'p';\r\n\r\nconst TEAM_MODIFIER_MAP = {\r\n    [ TEAM_MODIFIER_HOME ]: TEAM_HOME,\r\n    [ TEAM_MODIFIER_AWAY ]: TEAM_AWAY\r\n};\r\n\r\nexport const parseInputByRegex = (regex, input) => {\r\n\r\n    const regexResult = regex.exec(input);\r\n\r\n    if (regexResult === null) {\r\n        return {};\r\n    }\r\n\r\n    return Object.entries(regex.exec(input).groups).reduce((acc, [ key, value ]) => {\r\n        return {\r\n            ...acc,\r\n            [ key ]: value\r\n        }\r\n    }, {});\r\n}\r\n\r\nconst modifierTestFactory = (items = []) => input => items.includes(input);\r\n\r\n\r\nexport const isQuantityModifier = modifierTestFactory([QUANTITY_MODIFIER_DECREASE, QUANTITY_MODIFIER_INCREASE]);\r\nexport const isIncreaseModifier = input => input === QUANTITY_MODIFIER_INCREASE;\r\nexport const isDecreaseModifier = input => input === QUANTITY_MODIFIER_DECREASE;\r\n\r\nexport const isTeamModifier = modifierTestFactory([ TEAM_MODIFIER_HOME, TEAM_MODIFIER_AWAY ]);\r\nexport const isTeamModifierHome = input => input === TEAM_MODIFIER_HOME;\r\nexport const isTeamModifierAway = input => input === TEAM_MODIFIER_AWAY;\r\nexport const getTeamByModifier = input => TEAM_MODIFIER_MAP[input];\r\n\r\nexport const isNumberValue = input => input && !isNaN(input);\r\nexport const getNumberValue = input => parseInt(input);\r\n\r\nexport const isTimeStartModifier = input => input === TIME_START_MODIFIER;\r\nexport const isTimeStopModifier = input => input === TIME_STOP_MODIFIER;\r\n\r\n// just check length as regex filters characters\r\nexport const isOfficialPrefix = input => input && input.length === 1;\r\n\r\n","import { store } from '../../app/store';\r\nimport { LOG_TYPES } from '../../constants/constants';\r\n\r\nimport {\r\n    logEvent\r\n} from '../../features/commandLog/commandLogSlice';\r\n\r\nexport default class AbstractCommand {\r\n\r\n    command = '';\r\n\r\n    process() {}\r\n\r\n    log({ message = 'message', type = LOG_TYPES.INFO }) {\r\n        store.dispatch(logEvent({\r\n            message,\r\n            type\r\n        }))\r\n    }\r\n}","import {\r\n    getTeamByModifier,\r\n    isIncreaseModifier,\r\n    isQuantityModifier,\r\n    isTeamModifier,\r\n    parseInputByRegex,\r\n    isNumberValue,\r\n    isOfficialPrefix\r\n} from '../commandLineHelper';\r\nimport AbstractCommand from './abstractCommand';\r\nimport { store } from '../../app/store';\r\n\r\nimport {\r\n    increase,\r\n    decrease,\r\n} from '../../features/goal/goalSlice';\r\n\r\nimport {\r\n    selectPersonInfoByNumber,\r\n    changePlayerProperty\r\n} from '../../features/teamInfo/teamInfoSlice';\r\n\r\nimport {\r\n    createNotification\r\n} from '../../features/gameEvent/gameEventSlice';\r\n\r\nimport { LOG_TYPES, PLAYER_PROPERTIES } from '../../constants/constants';\r\nimport { parse } from 'uuid';\r\nimport { createGoalNotification } from '../helper/notificationFactory';\r\n\r\nexport default class GoalsCommand extends AbstractCommand {\r\n\r\n    static command = 'g';\r\n\r\n    parserRegex = /(?<team>\\W?[hg])?(?<number>\\W?[0-9a-d]+)?(?<modifier>\\W?[\\-\\+])?/;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    process(fragments) {\r\n\r\n        const parsedInput = parseInputByRegex(this.parserRegex, fragments);\r\n\r\n        if (!isTeamModifier(parsedInput.team)) {\r\n            this.log({\r\n                message: 'Invalid team!',\r\n                type: LOG_TYPES.ERROR\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const quantifierFunction = (\r\n            typeof parsedInput.modifier === 'undefined' || isIncreaseModifier(parsedInput.modifier)\r\n        ) \r\n            ? increase \r\n            : decrease;\r\n\r\n        const quantifierVerb = (\r\n            typeof parsedInput.modifier === 'undefined' || isIncreaseModifier(parsedInput.modifier)\r\n        ) \r\n            ? 'Added' \r\n            : 'Removed';\r\n\r\n        store.dispatch(\r\n            quantifierFunction(getTeamByModifier(parsedInput.team))\r\n        );\r\n\r\n        this.log({\r\n            message: `${quantifierVerb} goal for team ${getTeamByModifier(parsedInput.team)}`\r\n        });\r\n\r\n        if (isNumberValue(parsedInput.number) || isOfficialPrefix(parsedInput.number)) {\r\n            const notificationInfo = selectPersonInfoByNumber(getTeamByModifier(parsedInput.team), parsedInput.number)(store.getState());\r\n\r\n            if (!notificationInfo.player) {\r\n                this.log({\r\n                    type: LOG_TYPES.ERROR,\r\n                    message: `Player with number ${parsedInput.number} has not been found!`\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            store.dispatch(\r\n                createNotification(\r\n                    createGoalNotification({\r\n                        team: notificationInfo.team,\r\n                        player: notificationInfo.player,\r\n                        quantity: notificationInfo.player.goals + 1\r\n                    })\r\n                )\r\n            );\r\n\r\n            store.dispatch(\r\n                changePlayerProperty({\r\n                    team: getTeamByModifier(parsedInput.team),\r\n                    person: parsedInput.number,\r\n                    key: PLAYER_PROPERTIES.GOAL,\r\n                    value: notificationInfo.player.goals + 1\r\n                })\r\n            );\r\n\r\n            // create notification\r\n            this.log({\r\n                message: `Added notification for player`\r\n            });\r\n        }\r\n    }\r\n\r\n    static register() {\r\n        return {\r\n            handler: GoalsCommand,\r\n            command: GoalsCommand.command\r\n        }\r\n    }\r\n}","import {\r\n    getTeamByModifier,\r\n    isIncreaseModifier,\r\n    isQuantityModifier,\r\n    isTeamModifier,\r\n    parseInputByRegex,\r\n    isNumberValue,\r\n    isOfficialPrefix\r\n} from '../commandLineHelper';\r\n\r\nimport AbstractCommand from './abstractCommand';\r\nimport { store } from '../../app/store';\r\n\r\nimport { LOG_TYPES, PLAYER_PROPERTIES } from '../../constants/constants';\r\nimport { createPenaltyNotification } from '../helper/notificationFactory';\r\nimport { changePlayerProperty, selectPersonInfoByNumber } from '../../features/teamInfo/teamInfoSlice';\r\nimport { addPenalty } from '../../features/penalties/penaltySlice';\r\nimport { createNotification } from '../../features/gameEvent/gameEventSlice';\r\n\r\nexport default class PenaltyCommand extends AbstractCommand {\r\n\r\n    static command = 'p';\r\n\r\n    parserRegex = /(?<team>\\W?[hg])?(?<number>\\W?[0-9a-d]+)?/;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    process(fragments) {\r\n\r\n        const parsedInput = parseInputByRegex(this.parserRegex, fragments);\r\n\r\n        if (!isTeamModifier(parsedInput.team)) {\r\n            this.log({\r\n                message: 'Invalid team!',\r\n                type: LOG_TYPES.ERROR\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        store.dispatch(addPenalty(getTeamByModifier(parsedInput.team)));\r\n\r\n        this.log({\r\n            message: `Added time penalty for team ${getTeamByModifier(parsedInput.team)}`\r\n        });\r\n\r\n        if (isNumberValue(parsedInput.number) || isOfficialPrefix(parsedInput.number)) {\r\n            const notificationInfo = selectPersonInfoByNumber(getTeamByModifier(parsedInput.team), parsedInput.number)(store.getState());\r\n\r\n            if (!notificationInfo.player) {\r\n                this.log({\r\n                    type: LOG_TYPES.ERROR,\r\n                    message: `Player with number ${parsedInput.number} has not been found!`\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            store.dispatch(\r\n                createNotification(\r\n                    createPenaltyNotification({\r\n                        team: notificationInfo.team,\r\n                        player: notificationInfo.player,\r\n                        quantity: notificationInfo.player.timePenalty + 1\r\n                    })\r\n                )\r\n            );\r\n\r\n            store.dispatch(\r\n                changePlayerProperty({\r\n                    team: getTeamByModifier(parsedInput.team),\r\n                    person: parsedInput.number,\r\n                    key: PLAYER_PROPERTIES.PENALTY,\r\n                    value: notificationInfo.player.timePenalty + 1\r\n                })\r\n            );\r\n\r\n            // create notification\r\n            this.log({\r\n                message: `Added notification for player ${parsedInput.number}!`\r\n            });\r\n        }\r\n    }\r\n\r\n    static register() {\r\n        return {\r\n            handler: PenaltyCommand,\r\n            command: PenaltyCommand.command\r\n        }\r\n    }\r\n}","import {\r\n    getTeamByModifier,\r\n    isIncreaseModifier,\r\n    isQuantityModifier,\r\n    isTeamModifier,\r\n    parseInputByRegex,\r\n    isNumberValue,\r\n    isOfficialPrefix\r\n} from '../commandLineHelper';\r\n\r\nimport AbstractCommand from './abstractCommand';\r\nimport { store } from '../../app/store';\r\n\r\nimport { LOG_TYPES, PLAYER_PROPERTIES } from '../../constants/constants';\r\nimport { createRedCardNotification, createWarningNotification } from '../helper/notificationFactory';\r\nimport { changePlayerProperty, selectPersonInfoByNumber } from '../../features/teamInfo/teamInfoSlice';\r\nimport { createNotification } from '../../features/gameEvent/gameEventSlice';\r\n\r\nexport default class RedCardCommand extends AbstractCommand {\r\n\r\n    static command = 'r';\r\n\r\n    parserRegex = /(?<team>\\W?[hg])?(?<number>\\W?[0-9a-d]+)?/;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    process(fragments) {\r\n\r\n        const parsedInput = parseInputByRegex(this.parserRegex, fragments);\r\n\r\n        if (!isTeamModifier(parsedInput.team)) {\r\n            this.log({\r\n                message: 'Invalid team!',\r\n                type: LOG_TYPES.ERROR\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        if (!isNumberValue(parsedInput.number)) {\r\n            this.log({\r\n                message: 'Invalid number for player!',\r\n                type: LOG_TYPES.ERROR\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        if (isNumberValue(parsedInput.number) || isOfficialPrefix(parsedInput.number)) {\r\n            const notificationInfo = selectPersonInfoByNumber(getTeamByModifier(parsedInput.team), parsedInput.number)(store.getState());\r\n\r\n            if (!notificationInfo.player) {\r\n                this.log({\r\n                    type: LOG_TYPES.ERROR,\r\n                    message: `Player with number ${parsedInput.number} has not been found!`\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            store.dispatch(\r\n                createNotification(\r\n                    createRedCardNotification({\r\n                        team: notificationInfo.team,\r\n                        player: notificationInfo.player,\r\n                        quantity: notificationInfo.player.disqualification + 1\r\n                    })\r\n                )\r\n            );\r\n\r\n            store.dispatch(\r\n                changePlayerProperty({\r\n                    team: getTeamByModifier(parsedInput.team),\r\n                    person: parsedInput.number,\r\n                    key: PLAYER_PROPERTIES.DISQUALIFICATION,\r\n                    value: notificationInfo.player.disqualification + 1\r\n                })\r\n            );\r\n\r\n            this.log({\r\n                message: `Added red card for team ${getTeamByModifier(parsedInput.team)}`\r\n            });\r\n\r\n            // create notification\r\n            this.log({\r\n                message: `Added notification for player ${parsedInput.number}!`\r\n            });\r\n        }\r\n    }\r\n\r\n    static register() {\r\n        return {\r\n            handler: RedCardCommand,\r\n            command: RedCardCommand.command\r\n        }\r\n    }\r\n}","import AbstractCommand from \"./abstractCommand\";\r\nimport { store } from '../../app/store';\r\n\r\nimport {\r\n    isTimeStartModifier,\r\n    isTimeStopModifier,\r\n    parseInputByRegex\r\n} from '../commandLineHelper';\r\n\r\nimport {\r\n    start,\r\n    stop\r\n} from '../../features/time/timeSlice';\r\nimport { LOG_TYPES } from \"../../constants/constants\";\r\n\r\nexport default class TimeCommand extends AbstractCommand {\r\n\r\n    static command = 't';\r\n\r\n    parserRegex = /(?<command>\\W?[sp])/;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    process(fragments) {\r\n        const { command } = parseInputByRegex(this.parserRegex, fragments);\r\n\r\n        if (isTimeStartModifier(command)) {\r\n            store.dispatch(start());\r\n            this.log({\r\n                message: 'Time started!'\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (isTimeStopModifier(command)) {\r\n            store.dispatch(stop());\r\n            this.log({\r\n                message: 'Time stopped!'\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.log({\r\n            message: 'Invalid time modifier!',\r\n            type: LOG_TYPES.ERROR\r\n        });\r\n    }\r\n\r\n    static register() {\r\n        return {\r\n            handler: TimeCommand,\r\n            command: TimeCommand.command\r\n        }\r\n    }\r\n\r\n}","import {\r\n    getTeamByModifier,\r\n    isIncreaseModifier,\r\n    isQuantityModifier,\r\n    isTeamModifier,\r\n    parseInputByRegex,\r\n    isNumberValue,\r\n    isOfficialPrefix\r\n} from '../commandLineHelper';\r\n\r\nimport AbstractCommand from './abstractCommand';\r\nimport { store } from '../../app/store';\r\n\r\nimport { LOG_TYPES, PLAYER_PROPERTIES } from '../../constants/constants';\r\nimport { createWarningNotification } from '../helper/notificationFactory';\r\nimport { changePlayerProperty, selectPersonInfoByNumber } from '../../features/teamInfo/teamInfoSlice';\r\nimport { addPenalty } from '../../features/penalties/penaltySlice';\r\nimport { createNotification } from '../../features/gameEvent/gameEventSlice';\r\n\r\nexport default class WarningCommand extends AbstractCommand {\r\n\r\n    static command = 'y';\r\n\r\n    parserRegex = /(?<team>\\W?[hg])?(?<number>\\W?[0-9a-d]+)?/;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    process(fragments) {\r\n\r\n        const parsedInput = parseInputByRegex(this.parserRegex, fragments);\r\n\r\n        if (!isTeamModifier(parsedInput.team)) {\r\n            this.log({\r\n                message: 'Invalid team!',\r\n                type: LOG_TYPES.ERROR\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        if (!isNumberValue(parsedInput.number)) {\r\n            this.log({\r\n                message: 'Invalid number for player!',\r\n                type: LOG_TYPES.ERROR\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        if (isNumberValue(parsedInput.number) || isOfficialPrefix(parsedInput.number)) {\r\n            const notificationInfo = selectPersonInfoByNumber(getTeamByModifier(parsedInput.team), parsedInput.number)(store.getState());\r\n\r\n            if (!notificationInfo.player) {\r\n                this.log({\r\n                    type: LOG_TYPES.ERROR,\r\n                    message: `Player with number ${parsedInput.number} has not been found!`\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            store.dispatch(\r\n                createNotification(\r\n                    createWarningNotification({\r\n                        team: notificationInfo.team,\r\n                        player: notificationInfo.player,\r\n                        quantity: notificationInfo.player.warning + 1\r\n                    })\r\n                )\r\n            );\r\n\r\n            store.dispatch(\r\n                changePlayerProperty({\r\n                    team: getTeamByModifier(parsedInput.team),\r\n                    person: parsedInput.number,\r\n                    key: PLAYER_PROPERTIES.WARNING,\r\n                    value: notificationInfo.player.warning + 1\r\n                })\r\n            );\r\n\r\n            this.log({\r\n                message: `Added yellow card for team ${getTeamByModifier(parsedInput.team)}`\r\n            });\r\n\r\n            // create notification\r\n            this.log({\r\n                message: `Added notification for player ${parsedInput.number}!`\r\n            });\r\n        }\r\n    }\r\n\r\n    static register() {\r\n        return {\r\n            handler: WarningCommand,\r\n            command: WarningCommand.command\r\n        }\r\n    }\r\n}","import GoalsCommand from './commands/goals';\r\nimport PenaltyCommand from './commands/penalty';\r\nimport RedCardCommand from './commands/redCard';\r\nimport TimeCommand from './commands/time';\r\nimport WarningCommand from './commands/warning';\r\n\r\nconst commandsCollection = [\r\n    GoalsCommand,\r\n    TimeCommand,\r\n    PenaltyCommand,\r\n    WarningCommand,\r\n    RedCardCommand\r\n];\r\n\r\nclass CommandHandler {\r\n\r\n    commands;\r\n\r\n    constructor() {\r\n        this.commands = commandsCollection.map(command => command.register());\r\n    }\r\n\r\n    processCommand(input) {\r\n        const [ command, ...params] = input.trim().split('');\r\n\r\n        this.commands.forEach(\r\n            commandConfig => \r\n                commandConfig.command === command \r\n                    ? new commandConfig.handler().process(params.join('')) \r\n                    : void(0)\r\n        );\r\n    }\r\n}\r\n\r\nconst instance = new CommandHandler();\r\n\r\nexport default instance;","import './commandLine.scss';\r\n\r\nimport CommandHandler from '../../lib/commandLine';\r\n\r\nexport function CommandLine() {\r\n\r\n    return (\r\n        <div className=\"command-line\">\r\n            <input type=\"text\" className=\"p-4 is-size-1\" placeholder=\"Command...\" onKeyDown={\r\n                (event) => {\r\n                    if (event.key === 'Enter') {\r\n                        CommandHandler.processCommand(event.target.value);\r\n                        event.target.value = '';\r\n                    }\r\n                }\r\n            } />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectGoals } from '../goal/goalSlice';\r\n\r\nimport {\r\n    selectLogs\r\n} from './commandLogSlice';\r\n\r\nimport './commandLog.scss';\r\n\r\nimport {\r\n    LOG_COLORS\r\n} from '../../constants/constants';\r\n\r\nexport function CommandLog() {\r\n\r\n    const { logs } = useSelector(selectLogs);\r\n\r\n    return (\r\n        <div className=\"logs p-3\">\r\n            {\r\n                logs.map(log => (\r\n                    <div className=\"log is-size-7\" style={{ color: LOG_COLORS[log.type] }} key={log.id}>\r\n                        <p>{log.message}</p>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n\r\n}","import { EmptyGoal } from \"../../features/emptyGoal/EmptyGoal\";\r\nimport { GameEvent } from \"../../features/gameEvent/GameEvent\";\r\nimport { Goal } from \"../../features/goal/Goal\";\r\nimport { Penalties } from \"../../features/penalties/Penalties\";\r\nimport { Time } from \"../../features/time/Time\";\r\nimport { TimeOut } from \"../../features/timeout/Timeout\";\r\nimport { ControlSection } from \"../controlSection/ControlSection\";\r\n\r\nexport function GamePanel() {\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <Goal />\r\n            <Time />\r\n            <div className=\"columns mt-4\">\r\n                <ControlSection headline=\"Penalties\">\r\n                    <Penalties />\r\n                </ControlSection>\r\n                <ControlSection headline=\"Empty Goal\">\r\n                    <EmptyGoal />\r\n                </ControlSection>\r\n                {/* <ControlSection headline=\"Notifications\">\r\n                    <GameEvent />\r\n                </ControlSection> */}\r\n                <ControlSection headline=\"Game State\">\r\n                    <TimeOut />\r\n                </ControlSection>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    fetchTeamInformation\r\n} from '../teamInfo/teamInfoSlice';\r\n\r\nexport function GameData() {\r\n\r\n    const [ dataMode, setDataMode ] = useState('dhb');\r\n    const [ gameId, setGameId ] = useState('27549');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"card team-settings\">\r\n            <div className=\"card-header\">\r\n                <p className=\"card-header-title is-size-6 has-text-centered\">Team information</p>\r\n            </div>\r\n            <div className=\"card-content\">\r\n                <div className=\"field\">\r\n                    <label className=\"label is-small\">Source</label>\r\n                    <p className=\"control\">\r\n                        <span className=\"select is-small\">\r\n                            <select onChange={(event) => setDataMode(event.target.value)} value={dataMode}>\r\n                                <option value=\"dhb\">DHB</option>\r\n                                <option value=\"nu\">nuLiga</option>\r\n                            </select>\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label className=\"label is-small\">GameId</label>\r\n                    <p className=\"control\">\r\n                        <input type=\"text\" className=\"input is-small\" value={gameId} onChange={(event) => setGameId(event.target.value)}/>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <footer class=\"card-footer\">\r\n                <a class=\"card-footer-item\" onClick={() => dispatch(fetchTeamInformation({ mode: dataMode, game: gameId }))}>Load</a>\r\n            </footer>\r\n        </div>\r\n    )\r\n\r\n}","import { useSelector, useDispatch } from 'react-redux';\r\nimport { TEAM_AWAY, TEAM_HOME } from '../../constants/constants';\r\n\r\nimport {\r\n    changeTeamLongName,\r\n    changeTeamShortName,\r\n    changeTeamColor,\r\n    selectTeamInfoByTeam\r\n} from '../teamInfo/teamInfoSlice';\r\n\r\nconst TEAM_LABELS = {\r\n    [TEAM_HOME]: 'Home',\r\n    [TEAM_AWAY]: 'Guest'\r\n}\r\n\r\nexport function TeamMetaData({ team }) {\r\n\r\n    const dispatch = useDispatch();\r\n    const teamData = useSelector(selectTeamInfoByTeam(team));\r\n\r\n    return (\r\n        <div className=\"card mb-2\">\r\n            <div className=\"card-header\">\r\n                <p className=\"card-header-title is-size-6 has-text-centered\">{TEAM_LABELS[team]}</p>\r\n            </div>\r\n            <div className=\"card-content p-3\">\r\n                <div className=\"field mb-1\">\r\n                    <label className=\"field-label is-small\">Long name</label>\r\n                    <div className=\"field-body\">\r\n                        <div className=\"field\">\r\n                            <div className=\"control\">\r\n                            <input\r\n                                className=\"input is-small\"\r\n                                type=\"text\"\r\n                                onChange={(event) => dispatch(changeTeamLongName({ team, value: event.target.value }))}\r\n                                value={teamData.longName} \r\n                            />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"field mb-1\">\r\n                    <label className=\"field-label is-small\">Short name</label>\r\n                    <div className=\"field-body\">\r\n                        <div className=\"field\">\r\n                            <div className=\"control\">\r\n                                <input\r\n                                    className=\"input is-small\"\r\n                                    type=\"text\"\r\n                                    onChange={(event) => dispatch(changeTeamShortName({ team, value: event.target.value }))}\r\n                                    value={teamData.shortName}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"field mb-1\">\r\n                    <label className=\"field-label is-small\">Color</label>\r\n                    <div className=\"field-body\">\r\n                        <div className=\"field\">\r\n                            <div className=\"control\">\r\n                                <input\r\n                                    className=\"input is-small\"\r\n                                    type=\"color\"\r\n                                    onChange={(event) => dispatch(changeTeamColor({ team, value: event.target.value }))}\r\n                                    value={teamData.color} \r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useSelector, useDispatch } from \"react-redux\"\r\nimport { selectPeriodCount, selectPeriodDuration, setPeriodCount, setPeriodDuration } from \"./gameSettingsSlice\";\r\n\r\nexport function PeriodSettings() {\r\n\r\n    const dispatch = useDispatch();\r\n    const periodDuration = useSelector(selectPeriodDuration);\r\n    const periodCount = useSelector(selectPeriodCount);\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                <p className=\"card-header-title is-size-6 has-text-centered\">Period settings</p>\r\n            </div>\r\n            <div className=\"card-content\">\r\n                <div className=\"columns\">\r\n                    <div className=\"column\">\r\n                        <div className=\"field\">\r\n                            <label className=\"label is-small\">Period duration</label>\r\n                            <p className=\"control\">\r\n                                <span className=\"select is-small\">\r\n                                    <select value={periodDuration} onChange={(event) => dispatch(setPeriodDuration(event.target.value))}>\r\n                                        <option value={1800}>30:00</option>\r\n                                        <option value={1500}>25:00</option>\r\n                                        <option value={1200}>20:00</option>\r\n                                        <option value={900}>15:00</option>\r\n                                        <option value={600}>10:00</option>\r\n                                        <option value={300}>05:00</option>\r\n                                        <option value={60}>01:00</option>\r\n                                        <option value={10}>00:10</option>\r\n                                    </select>\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className=\"field\">\r\n                            <label className=\"label is-small\">Periods</label>\r\n                            <p className=\"control\">\r\n                                <span className=\"select is-small\">\r\n                                    <select value={periodCount} onChange={(event) => dispatch(setPeriodCount(event.target.value))}>\r\n                                        <option value={1}>1</option>\r\n                                        <option value={2}>2</option>\r\n                                        <option value={3}>3</option>\r\n                                        <option value={4}>4</option>\r\n                                    </select>\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <footer class=\"card-footer\">\r\n                <a class=\"card-footer-item\" onClick={() => dispatch(fetchTeamInformation({ mode: dataMode, game: gameId }))}>Load</a>\r\n            </footer> */}\r\n        </div>\r\n    )\r\n}","import { GameData } from \"./GameData\";\r\nimport { TeamMetaData } from \"./TeamMetaData\";\r\nimport { TEAM_AWAY, TEAM_HOME } from '../../constants/constants';\r\nimport { PeriodSettings } from \"./PeriodSettings\";\r\n\r\nexport function GameSettings() {\r\n    return (\r\n        <>\r\n            <div className=\"columns m-3\">\r\n                <div className=\"column\">\r\n                    <GameData />\r\n                </div>\r\n                <div className=\"column\">\r\n                    <TeamMetaData team={TEAM_HOME} />\r\n                </div>\r\n                <div className=\"column\">\r\n                    <TeamMetaData team={TEAM_AWAY} />\r\n                </div>\r\n            </div>\r\n            <div className=\"columns m-3\">\r\n                <div className=\"column is-one-third\">\r\n                    <PeriodSettings />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport './App.scss';\nimport { Goal } from './features/goal/Goal';\nimport { Time } from './features/time/Time';\nimport { Penalties } from './features/penalties/Penalties';\nimport { EmptyGoal } from './features/emptyGoal/EmptyGoal';\nimport { TeamInfo } from './features/teamInfo/TeamInfo';\nimport { GameEvent } from './features/gameEvent/GameEvent';\nimport { TimeOut } from './features/timeout/Timeout';\nimport { Sidebar } from './components/sidebar/Sidebar';\nimport { TEAM_AWAY, TEAM_HOME } from './constants/constants';\nimport { ControlSection } from './components/controlSection/ControlSection';\nimport { CommandLine } from './features/commandLine/CommandLine';\nimport { CommandLog } from './features/commandLog/CommandLog';\nimport { Tab, TabList, TabPanel, Tabs } from 'react-tabs';\nimport { GamePanel } from './components/gamePanel/GamePanel';\nimport { TeamSettings } from './features/gameSettings/GameData';\nimport { GameSettings } from './features/gameSettings/GameSettings';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Sidebar position={'left'}>\n        <TeamInfo team={TEAM_HOME} />\n      </Sidebar>\n      <div className=\"main\">\n        <Tabs>\n          <TabList>\n            <Tab>SCOREBOARD</Tab>\n            <Tab>CONFIG</Tab>\n            <Tab>ADVERTISING</Tab>\n          </TabList>\n\n          <TabPanel>\n            <GamePanel />\n          </TabPanel>\n          <TabPanel>\n            <GameSettings />\n          </TabPanel>\n          <TabPanel>\n            <div>Advertising</div>\n          </TabPanel>\n        </Tabs>\n      </div>\n      <CommandLog />\n      <Sidebar position={'right'}>\n        <TeamInfo team={TEAM_AWAY} />\n      </Sidebar>\n      <div className=\"command-palette\">\n        <CommandLine />\n      </div>\n      <div className=\"app-footer p-2\">\n        <span>Powered by <b>FGsportfoto</b></span>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { store } from '../app/store';\r\n\r\nimport websocketApi from '../lib/websocket';\r\n\r\nimport {\r\n    increase as increaseGlobalTime,\r\n    stop as stopTime,\r\n    STATUS\r\n} from '../features/time/timeSlice';\r\n\r\nimport { increaseCurrentPeriod } from '../features/gameSettings/gameSettingsSlice';\r\n\r\nimport {\r\n    increaseAll as increaseAllPenalties\r\n} from '../features/penalties/penaltySlice';\r\n\r\nlet heartbeat;\r\n\r\nconst heartbeatFunction = () => {\r\n    const actions = calculateActions(store.getState());\r\n\r\n    actions.forEach(store.dispatch);\r\n\r\n    if (actions.length > 0) {\r\n        // remove logs\r\n        const { logs, ...gameState } = store.getState();\r\n        websocketApi.send(gameState);\r\n    }\r\n}\r\n\r\nconst calculateActions = ({ time, gameSettings }) => {\r\n\r\n    let actions = [];\r\n\r\n    if (time.status === STATUS.RUNNING) {\r\n        // if next tick is period end => stop timer\r\n        if (time.gameTime + 1 <= (gameSettings.currentPeriod * gameSettings.periodDuration)) {\r\n            actions.push(increaseGlobalTime());\r\n            actions.push(increaseAllPenalties());\r\n        }\r\n\r\n        else {\r\n            actions.push(stopTime());\r\n            actions.push(increaseCurrentPeriod());\r\n        }\r\n    }\r\n\r\n    return actions;\r\n}\r\n\r\nexport const initHeartbeat = () => heartbeat = setInterval(heartbeatFunction, 1000);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma';\nimport './scss/bulma-dark.css';\nimport './scss/react-tabs.scss';\nimport './index.scss';\nimport App from './App.jsx';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport CommandHandler from './lib/commandLine';\nimport * as serviceWorker from './serviceWorker';\n\nimport {\n  initHeartbeat\n} from './lib/heartbeat';\n\nimport WebsocketApi from './lib/websocket';\n\ninitHeartbeat();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}